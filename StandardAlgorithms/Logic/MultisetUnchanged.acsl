
#ifndef MULTISETUNCHANGED_SPEC_INCLUDED
#define MULTISETUNCHANGED_SPEC_INCLUDED

#include "Count.acsl"

/*@
  axiomatic MultisetUnchanged
  {
    predicate
    MultisetUnchanged{K,L}(value_type* a, integer m, integer n) =
      \forall value_type v;
        Count{K}(a, m, n, v) == Count{L}(a, m, n, v);

    predicate
    MultisetUnchanged{K,L}(value_type* a, integer n) =
      MultisetUnchanged{K,L}(a, 0, n);

    lemma Unchanged_MultisetUnchanged{K,L}:
      \forall value_type *a, integer k, n;
        Unchanged{K,L}(a, k, n)  ==>
        MultisetUnchanged{K,L}(a, k, n);

    lemma MultisetUnchanged_Union{K,L}:
      \forall value_type *a, integer i, k, n;
        0 <= i <= k <= n                 ==>
        MultisetUnchanged{K,L}(a, i, k)  ==>
        MultisetUnchanged{K,L}(a, k, n)  ==>
        MultisetUnchanged{K,L}(a, i, n);

    lemma MultisetUnchanged_Symmetric{K,L}:
      \forall value_type *a, integer m, n;
        MultisetUnchanged{K,L}(a, m, n)  ==>
        MultisetUnchanged{L,K}(a, m, n);

    lemma MultisetUnchanged_Transitive{K,L,M}:
      \forall value_type *a, integer m, n;
        MultisetUnchanged{K,L}(a, m, n)  ==>
        MultisetUnchanged{L,M}(a, m, n)  ==>
        MultisetUnchanged{K,M}(a, m, n);
  }
*/

#endif /* MULTISETUNCHANGED_SPEC_INCLUDED */

