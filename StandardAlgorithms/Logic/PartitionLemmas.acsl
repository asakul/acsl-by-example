
#ifndef PARTITIONLEMMAS_ACSL_INCLUDED
#define PARTITIONLEMMAS_ACSL_INCLUDED

#include "MultisetReorder.acsl"
#include "ArrayBounds.acsl"
#include "CountFind.acsl"

/*@
  axiomatic PartitionLemmas
  {
    lemma MultisetReorder_SomeEqual{K,L}:
      \forall value_type *a, integer n, i;
        0 < n                       ==>
        0 <= i < n                  ==>
        MultisetReorder{K,L}(a, n)  ==>
        SomeEqual{K}(a, n, \at(a[i],L));

    lemma MultisetReorder_LowerBound{K,L}:
      \forall value_type* a, integer n, value_type v;
        0 <= n                      ==>
        MultisetReorder{K,L}(a, n)  ==>
        LowerBound{K}(a, n, v)      ==>
        LowerBound{L}(a, n, v);

    lemma MultisetReorder_UpperBound{K,L}:
      \forall value_type* a, integer n, value_type v;
        0 <= n                        ==>
        MultisetReorder{K,L}(a, n)    ==>
        UpperBound{K}(a, n, v)        ==>
        UpperBound{L}(a, n, v);

    lemma MultisetReorder_PartitionLowerBound{K,L}:
      \forall value_type* a, integer m, n;
        0 < m <= n                     ==>
        MultisetReorder{K,L}(a, 0, m)  ==>
        Partition{K}(a, m, n)          ==>
        Unchanged{K,L}(a, m, n)        ==>
        LowerBound{L}(a, m, n, \at(a[0],L));
  }
*/

#endif /* PARTITIONLEMMAS_ACSL_INCLUDED */

